import React , {useContext} from 'react'
import Context from './Context'
import {Brain , AvoidIcon , ValidIcon} from "."
import { Devonshire } from 'next/font/google'

function AdviceResult() {
  const context = useContext(Context)
  return (
    <div className={`
    felx flex-col gap-8 px-5 w-[60%] 
    ${context.pageLoaded ? "translate-y-0 opacity-100" :"translate-y-[80px] opacity-0"}
    ease-in-out duration-500
    `}>
        <h3
        className='main-title text-[26px] flex gap-4 items-center'
        ><span className='text-[70px]'><Brain /></span> ADVICE</h3>
        <div
        className='border w-full rounded-lg border-[#146C94] flex flex-col gap-10 p-4'
        >
          <div className='flex flex-col gap-2'>
            {
              context.userResult.advice.map((ad, index) => {
                return (
                  <div className='flex gap-3 items-center text-white text-[14px]' key={index}>
                    <div className='w-[15px] h-[15px] rounded-full bg-[#146C94]'></div>
                    {ad}
                  </div>
                )
              })
            }
          </div>

          <div
          className='flex gap-10'
          >
             <div className="w-1/2 flex flex-col gap-4 items-center">
              <div
              className='flex gap-2 text-[#2FE6DE]'
              >
                <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M8.6 11.8L6.45 9.65C6.26667 9.46667 6.03333 9.375 5.75 9.375C5.46667 9.375 5.23333 9.46667 5.05 9.65C4.86667 9.83333 4.775 10.0667 4.775 10.35C4.775 10.6333 4.86667 10.8667 5.05 11.05L7.9 13.9C8.1 14.1 8.33333 14.2 8.6 14.2C8.86667 14.2 9.1 14.1 9.3 13.9L14.95 8.25C15.1333 8.06667 15.225 7.83333 15.225 7.55C15.225 7.26667 15.1333 7.03333 14.95 6.85C14.7667 6.66667 14.5333 6.575 14.25 6.575C13.9667 6.575 13.7333 6.66667 13.55 6.85L8.6 11.8ZM10 20C8.61667 20 7.31667 19.7373 6.1 19.212C4.88333 18.6867 3.825 17.9743 2.925 17.075C2.025 16.175 1.31267 15.1167 0.788 13.9C0.263333 12.6833 0.000666667 11.3833 0 10C0 8.61667 0.262667 7.31667 0.788 6.1C1.31333 4.88333 2.02567 3.825 2.925 2.925C3.825 2.025 4.88333 1.31267 6.1 0.788C7.31667 0.263333 8.61667 0.000666667 10 0C11.3833 0 12.6833 0.262667 13.9 0.788C15.1167 1.31333 16.175 2.02567 17.075 2.925C17.975 3.825 18.6877 4.88333 19.213 6.1C19.7383 7.31667 20.0007 8.61667 20 10C20 11.3833 19.7373 12.6833 19.212 13.9C18.6867 15.1167 17.9743 16.175 17.075 17.075C16.175 17.975 15.1167 18.6877 13.9 19.213C12.6833 19.7383 11.3833 20.0007 10 20Z" fill="#00CECB"/>
                </svg>
                <p
                className='text-center font-bold text-[15px]'
                >FOOT TO EAT</p>
              </div>

              <p className='text-white flex'>{context.userResult.eat.map((item,index) => {
                if(index === context.userResult.eat.length -1){
                  return item+"."
                } else {
                  return item+", "
                }
              })}</p>

             </div>

             <div className='bg-[#00CECB] h-[100px] w-[3px] '></div>


             {/* ----------------------------------------------------------- */}
             <div className="w-1/2 flex flex-col gap-4 items-center">
              <div
              className='flex gap-2 text-[#2FE6DE]'
              >
                <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M10 0C8.02219 0 6.08879 0.58649 4.4443 1.6853C2.79981 2.78412 1.51809 4.3459 0.761209 6.17316C0.00433284 8.00042 -0.1937 10.0111 0.192152 11.9509C0.578004 13.8907 1.53041 15.6725 2.92894 17.0711C4.32746 18.4696 6.10929 19.422 8.0491 19.8078C9.98891 20.1937 11.9996 19.9957 13.8268 19.2388C15.6541 18.4819 17.2159 17.2002 18.3147 15.5557C19.4135 13.9112 20 11.9778 20 10C19.9972 7.34869 18.9427 4.80678 17.068 2.93202C15.1932 1.05727 12.6513 0.00279983 10 0ZM13.6212 12.5327C13.6926 12.6042 13.7493 12.689 13.788 12.7824C13.8267 12.8758 13.8466 12.9758 13.8466 13.0769C13.8466 13.178 13.8267 13.2781 13.788 13.3715C13.7493 13.4648 13.6926 13.5497 13.6212 13.6212C13.5497 13.6926 13.4648 13.7493 13.3715 13.788C13.2781 13.8267 13.178 13.8466 13.0769 13.8466C12.9759 13.8466 12.8758 13.8267 12.7824 13.788C12.689 13.7493 12.6042 13.6926 12.5327 13.6212L10 11.0875L7.46731 13.6212C7.39584 13.6926 7.31099 13.7493 7.21762 13.788C7.12424 13.8267 7.02415 13.8466 6.92308 13.8466C6.82201 13.8466 6.72192 13.8267 6.62854 13.788C6.53516 13.7493 6.45032 13.6926 6.37885 13.6212C6.30738 13.5497 6.25069 13.4648 6.21201 13.3715C6.17333 13.2781 6.15342 13.178 6.15342 13.0769C6.15342 12.9758 6.17333 12.8758 6.21201 12.7824C6.25069 12.689 6.30738 12.6042 6.37885 12.5327L8.9125 10L6.37885 7.46731C6.23451 7.32297 6.15342 7.1272 6.15342 6.92308C6.15342 6.71895 6.23451 6.52318 6.37885 6.37884C6.52319 6.23451 6.71895 6.15342 6.92308 6.15342C7.12721 6.15342 7.32297 6.23451 7.46731 6.37884L10 8.9125L12.5327 6.37884C12.6042 6.30738 12.689 6.25068 12.7824 6.212C12.8758 6.17332 12.9759 6.15342 13.0769 6.15342C13.178 6.15342 13.2781 6.17332 13.3715 6.212C13.4648 6.25068 13.5497 6.30738 13.6212 6.37884C13.6926 6.45031 13.7493 6.53516 13.788 6.62854C13.8267 6.72192 13.8466 6.822 13.8466 6.92308C13.8466 7.02415 13.8267 7.12423 13.788 7.21761C13.7493 7.31099 13.6926 7.39584 13.6212 7.46731L11.0875 10L13.6212 12.5327Z" fill="#00CECB"/>
                </svg>

                <p
                className='text-center font-bold text-[15px]'
                >FOOT TO AVOID</p>
              </div>

              <p className='text-white flex'>{context.userResult.avoid.map((item,index) => {
                if(index === context.userResult.avoid.length -1){
                  return item+"."
                } else {
                  return item+", "
                }
              })}</p>

             </div>
          </div>

        </div>
    </div>
  )
}

export default AdviceResult